name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint-python:
    name: Lint Python code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements.txt || true

      - name: Run flake8 (PEP 8)
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  lint-shell:
    name: Lint Shell scripts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Run ShellCheck
        run: |
          find . -type f -name "*.sh" -exec shellcheck {} +

  test-python:
    name: Python tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --requirement requirements.txt || true

      - name: Run tests
        run: |
          if [ -f pytest.ini ] || [ -f setup.cfg ] || [ -d tests ]; then
            pip install pytest
            pytest --maxfail=3 --disable-warnings --tb=short
          else
            echo "No Python tests found. Skipping."
          fi

      - name: Upload pytest results (if available)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: .pytest_cache/
          if-no-files-found: ignore

  security-checks:
    name: Security checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Bandit (Python security linter)
        run: |
          pip install bandit
          bandit -r . -x tests

      - name: Run ShellCheck (again, for security context)
        run: |
          find . -type f -name "*.sh" -exec shellcheck --severity=warning {} +

  upload-artifacts:
    name: Upload artifacts (built binaries, logs, etc.)
    runs-on: ubuntu-latest
    needs: [lint-python, lint-shell, test-python, security-checks]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload all logs and artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/*.log
            **/dist/
            **/build/
          if-no-files-found: ignore
